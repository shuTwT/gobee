// Code generated by ent, DO NOT EDIT.

package payorder

import (
	"gobee/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldUpdatedAt, v))
}

// ChannelID applies equality check predicate on the "channel_id" field. It's identical to ChannelIDEQ.
func ChannelID(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldChannelID, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldOrderID, v))
}

// OutTradeNo applies equality check predicate on the "out_trade_no" field. It's identical to OutTradeNoEQ.
func OutTradeNo(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldOutTradeNo, v))
}

// TotalFee applies equality check predicate on the "total_fee" field. It's identical to TotalFeeEQ.
func TotalFee(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldTotalFee, v))
}

// Subject applies equality check predicate on the "subject" field. It's identical to SubjectEQ.
func Subject(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldSubject, v))
}

// Body applies equality check predicate on the "body" field. It's identical to BodyEQ.
func Body(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldBody, v))
}

// NotifyURL applies equality check predicate on the "notify_url" field. It's identical to NotifyURLEQ.
func NotifyURL(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldNotifyURL, v))
}

// ReturnURL applies equality check predicate on the "return_url" field. It's identical to ReturnURLEQ.
func ReturnURL(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldReturnURL, v))
}

// Extra applies equality check predicate on the "extra" field. It's identical to ExtraEQ.
func Extra(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldExtra, v))
}

// PayURL applies equality check predicate on the "pay_url" field. It's identical to PayURLEQ.
func PayURL(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldPayURL, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldState, v))
}

// ErrorMsg applies equality check predicate on the "error_msg" field. It's identical to ErrorMsgEQ.
func ErrorMsg(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldErrorMsg, v))
}

// Raw applies equality check predicate on the "raw" field. It's identical to RawEQ.
func Raw(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldRaw, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldUpdatedAt, v))
}

// ChannelIDEQ applies the EQ predicate on the "channel_id" field.
func ChannelIDEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldChannelID, v))
}

// ChannelIDNEQ applies the NEQ predicate on the "channel_id" field.
func ChannelIDNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldChannelID, v))
}

// ChannelIDIn applies the In predicate on the "channel_id" field.
func ChannelIDIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldChannelID, vs...))
}

// ChannelIDNotIn applies the NotIn predicate on the "channel_id" field.
func ChannelIDNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldChannelID, vs...))
}

// ChannelIDGT applies the GT predicate on the "channel_id" field.
func ChannelIDGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldChannelID, v))
}

// ChannelIDGTE applies the GTE predicate on the "channel_id" field.
func ChannelIDGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldChannelID, v))
}

// ChannelIDLT applies the LT predicate on the "channel_id" field.
func ChannelIDLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldChannelID, v))
}

// ChannelIDLTE applies the LTE predicate on the "channel_id" field.
func ChannelIDLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldChannelID, v))
}

// ChannelIDContains applies the Contains predicate on the "channel_id" field.
func ChannelIDContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldChannelID, v))
}

// ChannelIDHasPrefix applies the HasPrefix predicate on the "channel_id" field.
func ChannelIDHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldChannelID, v))
}

// ChannelIDHasSuffix applies the HasSuffix predicate on the "channel_id" field.
func ChannelIDHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldChannelID, v))
}

// ChannelIDEqualFold applies the EqualFold predicate on the "channel_id" field.
func ChannelIDEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldChannelID, v))
}

// ChannelIDContainsFold applies the ContainsFold predicate on the "channel_id" field.
func ChannelIDContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldChannelID, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldOrderID, v))
}

// OrderIDContains applies the Contains predicate on the "order_id" field.
func OrderIDContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldOrderID, v))
}

// OrderIDHasPrefix applies the HasPrefix predicate on the "order_id" field.
func OrderIDHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldOrderID, v))
}

// OrderIDHasSuffix applies the HasSuffix predicate on the "order_id" field.
func OrderIDHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldOrderID, v))
}

// OrderIDEqualFold applies the EqualFold predicate on the "order_id" field.
func OrderIDEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldOrderID, v))
}

// OrderIDContainsFold applies the ContainsFold predicate on the "order_id" field.
func OrderIDContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldOrderID, v))
}

// OutTradeNoEQ applies the EQ predicate on the "out_trade_no" field.
func OutTradeNoEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldOutTradeNo, v))
}

// OutTradeNoNEQ applies the NEQ predicate on the "out_trade_no" field.
func OutTradeNoNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldOutTradeNo, v))
}

// OutTradeNoIn applies the In predicate on the "out_trade_no" field.
func OutTradeNoIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldOutTradeNo, vs...))
}

// OutTradeNoNotIn applies the NotIn predicate on the "out_trade_no" field.
func OutTradeNoNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldOutTradeNo, vs...))
}

// OutTradeNoGT applies the GT predicate on the "out_trade_no" field.
func OutTradeNoGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldOutTradeNo, v))
}

// OutTradeNoGTE applies the GTE predicate on the "out_trade_no" field.
func OutTradeNoGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldOutTradeNo, v))
}

// OutTradeNoLT applies the LT predicate on the "out_trade_no" field.
func OutTradeNoLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldOutTradeNo, v))
}

// OutTradeNoLTE applies the LTE predicate on the "out_trade_no" field.
func OutTradeNoLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldOutTradeNo, v))
}

// OutTradeNoContains applies the Contains predicate on the "out_trade_no" field.
func OutTradeNoContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldOutTradeNo, v))
}

// OutTradeNoHasPrefix applies the HasPrefix predicate on the "out_trade_no" field.
func OutTradeNoHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldOutTradeNo, v))
}

// OutTradeNoHasSuffix applies the HasSuffix predicate on the "out_trade_no" field.
func OutTradeNoHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldOutTradeNo, v))
}

// OutTradeNoEqualFold applies the EqualFold predicate on the "out_trade_no" field.
func OutTradeNoEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldOutTradeNo, v))
}

// OutTradeNoContainsFold applies the ContainsFold predicate on the "out_trade_no" field.
func OutTradeNoContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldOutTradeNo, v))
}

// TotalFeeEQ applies the EQ predicate on the "total_fee" field.
func TotalFeeEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldTotalFee, v))
}

// TotalFeeNEQ applies the NEQ predicate on the "total_fee" field.
func TotalFeeNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldTotalFee, v))
}

// TotalFeeIn applies the In predicate on the "total_fee" field.
func TotalFeeIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldTotalFee, vs...))
}

// TotalFeeNotIn applies the NotIn predicate on the "total_fee" field.
func TotalFeeNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldTotalFee, vs...))
}

// TotalFeeGT applies the GT predicate on the "total_fee" field.
func TotalFeeGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldTotalFee, v))
}

// TotalFeeGTE applies the GTE predicate on the "total_fee" field.
func TotalFeeGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldTotalFee, v))
}

// TotalFeeLT applies the LT predicate on the "total_fee" field.
func TotalFeeLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldTotalFee, v))
}

// TotalFeeLTE applies the LTE predicate on the "total_fee" field.
func TotalFeeLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldTotalFee, v))
}

// TotalFeeContains applies the Contains predicate on the "total_fee" field.
func TotalFeeContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldTotalFee, v))
}

// TotalFeeHasPrefix applies the HasPrefix predicate on the "total_fee" field.
func TotalFeeHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldTotalFee, v))
}

// TotalFeeHasSuffix applies the HasSuffix predicate on the "total_fee" field.
func TotalFeeHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldTotalFee, v))
}

// TotalFeeEqualFold applies the EqualFold predicate on the "total_fee" field.
func TotalFeeEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldTotalFee, v))
}

// TotalFeeContainsFold applies the ContainsFold predicate on the "total_fee" field.
func TotalFeeContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldTotalFee, v))
}

// SubjectEQ applies the EQ predicate on the "subject" field.
func SubjectEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldSubject, v))
}

// SubjectNEQ applies the NEQ predicate on the "subject" field.
func SubjectNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldSubject, v))
}

// SubjectIn applies the In predicate on the "subject" field.
func SubjectIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldSubject, vs...))
}

// SubjectNotIn applies the NotIn predicate on the "subject" field.
func SubjectNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldSubject, vs...))
}

// SubjectGT applies the GT predicate on the "subject" field.
func SubjectGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldSubject, v))
}

// SubjectGTE applies the GTE predicate on the "subject" field.
func SubjectGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldSubject, v))
}

// SubjectLT applies the LT predicate on the "subject" field.
func SubjectLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldSubject, v))
}

// SubjectLTE applies the LTE predicate on the "subject" field.
func SubjectLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldSubject, v))
}

// SubjectContains applies the Contains predicate on the "subject" field.
func SubjectContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldSubject, v))
}

// SubjectHasPrefix applies the HasPrefix predicate on the "subject" field.
func SubjectHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldSubject, v))
}

// SubjectHasSuffix applies the HasSuffix predicate on the "subject" field.
func SubjectHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldSubject, v))
}

// SubjectEqualFold applies the EqualFold predicate on the "subject" field.
func SubjectEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldSubject, v))
}

// SubjectContainsFold applies the ContainsFold predicate on the "subject" field.
func SubjectContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldSubject, v))
}

// BodyEQ applies the EQ predicate on the "body" field.
func BodyEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldBody, v))
}

// BodyNEQ applies the NEQ predicate on the "body" field.
func BodyNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldBody, v))
}

// BodyIn applies the In predicate on the "body" field.
func BodyIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldBody, vs...))
}

// BodyNotIn applies the NotIn predicate on the "body" field.
func BodyNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldBody, vs...))
}

// BodyGT applies the GT predicate on the "body" field.
func BodyGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldBody, v))
}

// BodyGTE applies the GTE predicate on the "body" field.
func BodyGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldBody, v))
}

// BodyLT applies the LT predicate on the "body" field.
func BodyLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldBody, v))
}

// BodyLTE applies the LTE predicate on the "body" field.
func BodyLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldBody, v))
}

// BodyContains applies the Contains predicate on the "body" field.
func BodyContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldBody, v))
}

// BodyHasPrefix applies the HasPrefix predicate on the "body" field.
func BodyHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldBody, v))
}

// BodyHasSuffix applies the HasSuffix predicate on the "body" field.
func BodyHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldBody, v))
}

// BodyEqualFold applies the EqualFold predicate on the "body" field.
func BodyEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldBody, v))
}

// BodyContainsFold applies the ContainsFold predicate on the "body" field.
func BodyContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldBody, v))
}

// NotifyURLEQ applies the EQ predicate on the "notify_url" field.
func NotifyURLEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldNotifyURL, v))
}

// NotifyURLNEQ applies the NEQ predicate on the "notify_url" field.
func NotifyURLNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldNotifyURL, v))
}

// NotifyURLIn applies the In predicate on the "notify_url" field.
func NotifyURLIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldNotifyURL, vs...))
}

// NotifyURLNotIn applies the NotIn predicate on the "notify_url" field.
func NotifyURLNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldNotifyURL, vs...))
}

// NotifyURLGT applies the GT predicate on the "notify_url" field.
func NotifyURLGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldNotifyURL, v))
}

// NotifyURLGTE applies the GTE predicate on the "notify_url" field.
func NotifyURLGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldNotifyURL, v))
}

// NotifyURLLT applies the LT predicate on the "notify_url" field.
func NotifyURLLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldNotifyURL, v))
}

// NotifyURLLTE applies the LTE predicate on the "notify_url" field.
func NotifyURLLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldNotifyURL, v))
}

// NotifyURLContains applies the Contains predicate on the "notify_url" field.
func NotifyURLContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldNotifyURL, v))
}

// NotifyURLHasPrefix applies the HasPrefix predicate on the "notify_url" field.
func NotifyURLHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldNotifyURL, v))
}

// NotifyURLHasSuffix applies the HasSuffix predicate on the "notify_url" field.
func NotifyURLHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldNotifyURL, v))
}

// NotifyURLEqualFold applies the EqualFold predicate on the "notify_url" field.
func NotifyURLEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldNotifyURL, v))
}

// NotifyURLContainsFold applies the ContainsFold predicate on the "notify_url" field.
func NotifyURLContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldNotifyURL, v))
}

// ReturnURLEQ applies the EQ predicate on the "return_url" field.
func ReturnURLEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldReturnURL, v))
}

// ReturnURLNEQ applies the NEQ predicate on the "return_url" field.
func ReturnURLNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldReturnURL, v))
}

// ReturnURLIn applies the In predicate on the "return_url" field.
func ReturnURLIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldReturnURL, vs...))
}

// ReturnURLNotIn applies the NotIn predicate on the "return_url" field.
func ReturnURLNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldReturnURL, vs...))
}

// ReturnURLGT applies the GT predicate on the "return_url" field.
func ReturnURLGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldReturnURL, v))
}

// ReturnURLGTE applies the GTE predicate on the "return_url" field.
func ReturnURLGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldReturnURL, v))
}

// ReturnURLLT applies the LT predicate on the "return_url" field.
func ReturnURLLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldReturnURL, v))
}

// ReturnURLLTE applies the LTE predicate on the "return_url" field.
func ReturnURLLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldReturnURL, v))
}

// ReturnURLContains applies the Contains predicate on the "return_url" field.
func ReturnURLContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldReturnURL, v))
}

// ReturnURLHasPrefix applies the HasPrefix predicate on the "return_url" field.
func ReturnURLHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldReturnURL, v))
}

// ReturnURLHasSuffix applies the HasSuffix predicate on the "return_url" field.
func ReturnURLHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldReturnURL, v))
}

// ReturnURLEqualFold applies the EqualFold predicate on the "return_url" field.
func ReturnURLEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldReturnURL, v))
}

// ReturnURLContainsFold applies the ContainsFold predicate on the "return_url" field.
func ReturnURLContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldReturnURL, v))
}

// ExtraEQ applies the EQ predicate on the "extra" field.
func ExtraEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldExtra, v))
}

// ExtraNEQ applies the NEQ predicate on the "extra" field.
func ExtraNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldExtra, v))
}

// ExtraIn applies the In predicate on the "extra" field.
func ExtraIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldExtra, vs...))
}

// ExtraNotIn applies the NotIn predicate on the "extra" field.
func ExtraNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldExtra, vs...))
}

// ExtraGT applies the GT predicate on the "extra" field.
func ExtraGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldExtra, v))
}

// ExtraGTE applies the GTE predicate on the "extra" field.
func ExtraGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldExtra, v))
}

// ExtraLT applies the LT predicate on the "extra" field.
func ExtraLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldExtra, v))
}

// ExtraLTE applies the LTE predicate on the "extra" field.
func ExtraLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldExtra, v))
}

// ExtraContains applies the Contains predicate on the "extra" field.
func ExtraContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldExtra, v))
}

// ExtraHasPrefix applies the HasPrefix predicate on the "extra" field.
func ExtraHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldExtra, v))
}

// ExtraHasSuffix applies the HasSuffix predicate on the "extra" field.
func ExtraHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldExtra, v))
}

// ExtraEqualFold applies the EqualFold predicate on the "extra" field.
func ExtraEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldExtra, v))
}

// ExtraContainsFold applies the ContainsFold predicate on the "extra" field.
func ExtraContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldExtra, v))
}

// PayURLEQ applies the EQ predicate on the "pay_url" field.
func PayURLEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldPayURL, v))
}

// PayURLNEQ applies the NEQ predicate on the "pay_url" field.
func PayURLNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldPayURL, v))
}

// PayURLIn applies the In predicate on the "pay_url" field.
func PayURLIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldPayURL, vs...))
}

// PayURLNotIn applies the NotIn predicate on the "pay_url" field.
func PayURLNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldPayURL, vs...))
}

// PayURLGT applies the GT predicate on the "pay_url" field.
func PayURLGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldPayURL, v))
}

// PayURLGTE applies the GTE predicate on the "pay_url" field.
func PayURLGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldPayURL, v))
}

// PayURLLT applies the LT predicate on the "pay_url" field.
func PayURLLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldPayURL, v))
}

// PayURLLTE applies the LTE predicate on the "pay_url" field.
func PayURLLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldPayURL, v))
}

// PayURLContains applies the Contains predicate on the "pay_url" field.
func PayURLContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldPayURL, v))
}

// PayURLHasPrefix applies the HasPrefix predicate on the "pay_url" field.
func PayURLHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldPayURL, v))
}

// PayURLHasSuffix applies the HasSuffix predicate on the "pay_url" field.
func PayURLHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldPayURL, v))
}

// PayURLIsNil applies the IsNil predicate on the "pay_url" field.
func PayURLIsNil() predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIsNull(FieldPayURL))
}

// PayURLNotNil applies the NotNil predicate on the "pay_url" field.
func PayURLNotNil() predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotNull(FieldPayURL))
}

// PayURLEqualFold applies the EqualFold predicate on the "pay_url" field.
func PayURLEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldPayURL, v))
}

// PayURLContainsFold applies the ContainsFold predicate on the "pay_url" field.
func PayURLContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldPayURL, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldState, v))
}

// ErrorMsgEQ applies the EQ predicate on the "error_msg" field.
func ErrorMsgEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldErrorMsg, v))
}

// ErrorMsgNEQ applies the NEQ predicate on the "error_msg" field.
func ErrorMsgNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldErrorMsg, v))
}

// ErrorMsgIn applies the In predicate on the "error_msg" field.
func ErrorMsgIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldErrorMsg, vs...))
}

// ErrorMsgNotIn applies the NotIn predicate on the "error_msg" field.
func ErrorMsgNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldErrorMsg, vs...))
}

// ErrorMsgGT applies the GT predicate on the "error_msg" field.
func ErrorMsgGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldErrorMsg, v))
}

// ErrorMsgGTE applies the GTE predicate on the "error_msg" field.
func ErrorMsgGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldErrorMsg, v))
}

// ErrorMsgLT applies the LT predicate on the "error_msg" field.
func ErrorMsgLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldErrorMsg, v))
}

// ErrorMsgLTE applies the LTE predicate on the "error_msg" field.
func ErrorMsgLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldErrorMsg, v))
}

// ErrorMsgContains applies the Contains predicate on the "error_msg" field.
func ErrorMsgContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldErrorMsg, v))
}

// ErrorMsgHasPrefix applies the HasPrefix predicate on the "error_msg" field.
func ErrorMsgHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldErrorMsg, v))
}

// ErrorMsgHasSuffix applies the HasSuffix predicate on the "error_msg" field.
func ErrorMsgHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldErrorMsg, v))
}

// ErrorMsgIsNil applies the IsNil predicate on the "error_msg" field.
func ErrorMsgIsNil() predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIsNull(FieldErrorMsg))
}

// ErrorMsgNotNil applies the NotNil predicate on the "error_msg" field.
func ErrorMsgNotNil() predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotNull(FieldErrorMsg))
}

// ErrorMsgEqualFold applies the EqualFold predicate on the "error_msg" field.
func ErrorMsgEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldErrorMsg, v))
}

// ErrorMsgContainsFold applies the ContainsFold predicate on the "error_msg" field.
func ErrorMsgContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldErrorMsg, v))
}

// RawEQ applies the EQ predicate on the "raw" field.
func RawEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEQ(FieldRaw, v))
}

// RawNEQ applies the NEQ predicate on the "raw" field.
func RawNEQ(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNEQ(FieldRaw, v))
}

// RawIn applies the In predicate on the "raw" field.
func RawIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIn(FieldRaw, vs...))
}

// RawNotIn applies the NotIn predicate on the "raw" field.
func RawNotIn(vs ...string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotIn(FieldRaw, vs...))
}

// RawGT applies the GT predicate on the "raw" field.
func RawGT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGT(FieldRaw, v))
}

// RawGTE applies the GTE predicate on the "raw" field.
func RawGTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldGTE(FieldRaw, v))
}

// RawLT applies the LT predicate on the "raw" field.
func RawLT(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLT(FieldRaw, v))
}

// RawLTE applies the LTE predicate on the "raw" field.
func RawLTE(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldLTE(FieldRaw, v))
}

// RawContains applies the Contains predicate on the "raw" field.
func RawContains(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContains(FieldRaw, v))
}

// RawHasPrefix applies the HasPrefix predicate on the "raw" field.
func RawHasPrefix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasPrefix(FieldRaw, v))
}

// RawHasSuffix applies the HasSuffix predicate on the "raw" field.
func RawHasSuffix(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldHasSuffix(FieldRaw, v))
}

// RawIsNil applies the IsNil predicate on the "raw" field.
func RawIsNil() predicate.PayOrder {
	return predicate.PayOrder(sql.FieldIsNull(FieldRaw))
}

// RawNotNil applies the NotNil predicate on the "raw" field.
func RawNotNil() predicate.PayOrder {
	return predicate.PayOrder(sql.FieldNotNull(FieldRaw))
}

// RawEqualFold applies the EqualFold predicate on the "raw" field.
func RawEqualFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldEqualFold(FieldRaw, v))
}

// RawContainsFold applies the ContainsFold predicate on the "raw" field.
func RawContainsFold(v string) predicate.PayOrder {
	return predicate.PayOrder(sql.FieldContainsFold(FieldRaw, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PayOrder) predicate.PayOrder {
	return predicate.PayOrder(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PayOrder) predicate.PayOrder {
	return predicate.PayOrder(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PayOrder) predicate.PayOrder {
	return predicate.PayOrder(sql.NotPredicates(p))
}
