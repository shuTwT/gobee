{{define "content"}}
<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>用户管理</h2>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
            <i class="bi bi-plus"></i> 添加用户
        </button>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>邮箱</th>
                            <th>用户名</th>
                            <th>手机号</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody id="userTableBody">
                        <!-- 用户数据将通过 JavaScript 动态加载 -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- 添加/编辑用户模态框 -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalTitle">添加用户</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="userForm">
                    <input type="hidden" id="userId">
                    <div class="mb-3">
                        <label for="email" class="form-label">邮箱</label>
                        <input type="email" class="form-control" id="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="name" class="form-label">用户名</label>
                        <input type="text" class="form-control" id="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="phoneNumber" class="form-label">手机号</label>
                        <input type="tel" class="form-control" id="phoneNumber">
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">密码</label>
                        <input type="password" class="form-control" id="password" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" onclick="saveUser()">保存</button>
            </div>
        </div>
    </div>
</div>

<script>
let editingUserId = null;

// 加载用户列表
function loadUsers() {
    fetch('/api/v1/users')
        .then(response => response.json())
        .then(result => {
            const tbody = document.getElementById('userTableBody');
            tbody.innerHTML = '';
            result.data.forEach(user => {
                tbody.innerHTML += `
                    <tr>
                        <td>${user.id}</td>
                        <td>${user.email}</td>
                        <td>${user.name}</td>
                        <td>${user.phone_number || '-'}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="editUser('${user.id}')">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteUser('${user.id}')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
            });
        })
        .catch(error => {
            console.error('Error loading users:', error);
            alert('加载用户列表失败');
        });
}

// 保存用户（创建或更新）
function saveUser() {
    const userData = {
        email: document.getElementById('email').value,
        name: document.getElementById('name').value,
        phone_number: document.getElementById('phoneNumber').value,
        password: document.getElementById('password').value
    };

    const url = editingUserId 
        ? `/api/v1/users/${editingUserId}`
        : '/api/v1/users';
    
    const method = editingUserId ? 'PUT' : 'POST';

    fetch(url, {
        method: method,
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(userData)
    })
    .then(response => response.json())
    .then(result => {
        if (result.error) {
            throw new Error(result.error);
        }
        bootstrap.Modal.getInstance(document.getElementById('addUserModal')).hide();
        loadUsers();
        resetForm();
    })
    .catch(error => {
        console.error('Error saving user:', error);
        alert('保存用户失败: ' + error.message);
    });
}

// 编辑用户
function editUser(userId) {
    editingUserId = userId;
    document.getElementById('userModalTitle').textContent = '编辑用户';
    document.getElementById('password').required = false;
    
    fetch(`/api/v1/users/${userId}`)
        .then(response => response.json())
        .then(result => {
            const user = result.data;
            document.getElementById('email').value = user.email;
            document.getElementById('email').readOnly = true;
            document.getElementById('name').value = user.name;
            document.getElementById('phoneNumber').value = user.phone_number || '';
            document.getElementById('password').value = '';
            
            const modal = new bootstrap.Modal(document.getElementById('addUserModal'));
            modal.show();
        })
        .catch(error => {
            console.error('Error fetching user:', error);
            alert('获取用户信息失败');
        });
}

// 删除用户
function deleteUser(userId) {
    if (!confirm('确定要删除这个用户吗？')) {
        return;
    }

    fetch(`/api/v1/users/${userId}`, {
        method: 'DELETE'
    })
    .then(response => response.json())
    .then(result => {
        if (result.error) {
            throw new Error(result.error);
        }
        loadUsers();
    })
    .catch(error => {
        console.error('Error deleting user:', error);
        alert('删除用户失败: ' + error.message);
    });
}

// 重置表单
function resetForm() {
    editingUserId = null;
    document.getElementById('userForm').reset();
    document.getElementById('userModalTitle').textContent = '添加用户';
    document.getElementById('email').readOnly = false;
    document.getElementById('password').required = true;
}

// 监听模态框关闭事件
document.getElementById('addUserModal').addEventListener('hidden.bs.modal', resetForm);

// 页面加载完成后加载用户列表
document.addEventListener('DOMContentLoaded', loadUsers);
</script>
{{end}}